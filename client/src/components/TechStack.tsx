import { useState } from "react";
import { motion } from "framer-motion";
import { cn } from "@/lib/utils";

type TechCategory = "web" | "mobile" | "nextgen";

// SVG Icons as JSX elements to avoid import issues
const ReactIcon = () => (
  <svg viewBox="0 0 24 24" fill="none" className="w-10 h-10">
    <path d="M12 13.5C12.8284 13.5 13.5 12.8284 13.5 12C13.5 11.1716 12.8284 10.5 12 10.5C11.1716 10.5 10.5 11.1716 10.5 12C10.5 12.8284 11.1716 13.5 12 13.5Z" fill="#61DAFB" />
    <path fillRule="evenodd" clipRule="evenodd" d="M12 6.85714C13.475 6.85714 14.8929 7.05143 16.1161 7.42571C17.3393 7.8 18.3304 8.35714 19.0179 9.05714C19.7054 9.75714 20.0714 10.5429 20.0714 11.3714C20.0714 12.2286 19.6786 13.0857 18.925 13.8429C18.1714 14.6 17.1321 15.2 15.8732 15.6C14.6143 16 13.2321 16.2 12 16.2C10.725 16.2 9.32143 16.0057 8.03571 15.6171C6.75 15.2286 5.73214 14.6286 4.95 13.8429C4.16786 13.0571 3.78571 12.2 3.78571 11.3714C3.78571 10.5429 4.18929 9.75714 4.91786 9.05714C5.64643 8.35714 6.65357 7.8 7.92857 7.42571C9.20357 7.05143 10.5536 6.85714 12 6.85714Z" stroke="#61DAFB" strokeWidth="1.5" />
    <path d="M15.4286 3.34286C16.6875 5.57143 17.5714 8.05714 18.0804 10.4857C18.5893 12.9143 18.6964 15.2571 18.3571 17.3143" stroke="#61DAFB" strokeWidth="1.5" strokeLinecap="round" />
    <path d="M5.61429 17.2286C5.225 15.1714 5.33214 12.8286 5.89286 10.4C6.45357 7.97143 7.33929 5.48571 8.57143 3.25714" stroke="#61DAFB" strokeWidth="1.5" strokeLinecap="round" />
    <path d="M8.51786 20.6571C9.7125 20.6571 10.6875 19.6714 10.6875 18.4286C10.6875 17.1857 9.7125 16.2 8.51786 16.2C7.32321 16.2 6.34821 17.1857 6.34821 18.4286C6.34821 19.6714 7.32321 20.6571 8.51786 20.6571Z" fill="#61DAFB" />
    <path d="M15.4286 20.6571C16.6232 20.6571 17.5982 19.6714 17.5982 18.4286C17.5982 17.1857 16.6232 16.2 15.4286 16.2C14.2339 16.2 13.2589 17.1857 13.2589 18.4286C13.2589 19.6714 14.2339 20.6571 15.4286 20.6571Z" fill="#61DAFB" />
  </svg>
);

const AngularIcon = () => (
  <svg viewBox="0 0 24 24" fill="none" className="w-10 h-10">
    <path d="M12 2L3 6L4.63 16.27L12 21L19.36 16.27L21 6L12 2Z" fill="#DD0031"/>
    <path d="M12 2V21L19.36 16.27L21 6L12 2Z" fill="#C3002F"/>
    <path d="M12 4.67L6.67 16L8.33 15.92L9.33 13.33H14.73L15.73 16L17.33 16.08L12 4.67ZM12 7.33L14 12H10L12 7.33Z" fill="white"/>
  </svg>
);

const VueIcon = () => (
  <svg viewBox="0 0 24 24" fill="none" className="w-10 h-10">
    <path d="M19.197 3.406H15.25L12 8.906L9.214 3.406H0.75L12 22.594L23.25 3.406H19.197ZM4.197 5.406H7.107L12 14.094L16.857 5.406H19.768L12 18.594L4.197 5.406Z" fill="#41B883"/>
    <path d="M7.107 5.406H4.197L12 18.594L19.768 5.406H16.857L12 14.094L7.107 5.406Z" fill="#34495E"/>
  </svg>
);

const AndroidIcon = () => (
  <svg viewBox="0 0 24 24" fill="none" className="w-10 h-10">
    <path d="M17.5227 15.9773V8.31818C17.5227 7.85227 17.1705 7.5 16.7045 7.5H7.29545C6.82954 7.5 6.47727 7.85227 6.47727 8.31818V15.9773C6.47727 16.4432 6.82954 16.7955 7.29545 16.7955H16.7045C17.1705 16.7955 17.5227 16.4432 17.5227 15.9773Z" fill="#3DDC84"/>
    <path d="M5.25 9.13636V15.5682C5.25 16.3864 4.63636 17 3.81818 17C3 17 2.38636 16.3864 2.38636 15.5682V9.13636C2.38636 8.31818 3 7.70454 3.81818 7.70454C4.63636 7.70454 5.25 8.31818 5.25 9.13636Z" fill="#3DDC84"/>
    <path d="M21.6136 9.13636V15.5682C21.6136 16.3864 21 17 20.1818 17C19.3636 17 18.75 16.3864 18.75 15.5682V9.13636C18.75 8.31818 19.3636 7.70454 20.1818 7.70454C21 7.70454 21.6136 8.31818 21.6136 9.13636Z" fill="#3DDC84"/>
    <path d="M7.5 7.09091L9.54545 3.68182C9.68182 3.40909 9.61363 3.13636 9.34091 3C9.06818 2.86364 8.79545 2.93182 8.65909 3.20455L6.61363 6.61364C4.43182 5.79545 2.11363 6.47727 0.750001 8.31818C0.613637 8.52273 0.613637 8.79545 0.818182 8.93182C1.02273 9.06818 1.29545 9.06818 1.43182 8.86364C2.59091 7.29545 4.63636 6.81818 6.47727 7.63636C6.81818 7.38636 7.15909 7.22727 7.5 7.09091Z" fill="#3DDC84"/>
    <path d="M17.3864 6.61364L15.3409 3.20455C15.2045 2.93182 14.9318 2.86364 14.6591 3C14.3864 3.13636 14.3182 3.40909 14.4545 3.68182L16.5 7.09091C16.8409 7.22727 17.1818 7.38636 17.5227 7.63636C19.3636 6.81818 21.4091 7.29545 22.5682 8.86364C22.7045 9.06818 22.9773 9.06818 23.1818 8.93182C23.3864 8.79545 23.3864 8.52273 23.25 8.31818C21.8864 6.47727 19.5682 5.79545 17.3864 6.61364Z" fill="#3DDC84"/>
  </svg>
);

const SwiftIcon = () => (
  <svg viewBox="0 0 24 24" fill="none" className="w-10 h-10">
    <path d="M21.984 17.472C21.984 17.472 18.72 19.104 15.648 19.104C10.269 19.104 5.472 14.496 5.472 9.408C5.472 6.432 6.768 3.792 6.768 3.792C6.768 3.792 3.312 6.144 3.312 10.944C3.312 16.608 8.496 21.744 14.16 21.744C17.52 21.744 21.984 17.472 21.984 17.472Z" fill="#F05138"/>
    <path d="M10.656 7.872C12.192 5.952 14.544 4.032 17.088 2.304C16.512 3.024 14.016 6.192 10.656 10.32C7.296 14.448 3.696 19.872 3.696 19.872C3.696 19.872 3.696 19.872 3.888 19.68C6.864 16.128 9.12 9.792 10.656 7.872Z" fill="#F05138"/>
    <path d="M16.992 13.152C16.944 13.152 16.896 13.152 16.848 13.2C16.848 12.576 16.656 11.952 16.416 11.472C16.176 10.992 15.888 10.56 15.504 10.176C15.12 9.792 14.736 9.408 14.304 9.12C13.872 8.784 13.392 8.544 12.912 8.304C12.432 8.064 11.952 7.92 11.424 7.824C10.896 7.728 10.416 7.68 9.888 7.68C8.64 7.68 7.44 7.92 6.48 8.352C5.472 8.784 4.656 9.408 3.936 10.176C3.216 10.944 2.688 11.856 2.304 12.912C1.92 13.92 1.728 15.072 1.728 16.224C1.728 17.328 1.92 18.384 2.256 19.296C2.592 20.208 3.072 21.024 3.744 21.744L3.792 21.792L6.192 19.392C5.28 18.864 4.608 18.096 4.08 17.28C3.696 16.656 3.456 15.984 3.36 15.264C3.312 14.544 3.36 13.824 3.6 13.104C3.84 12.384 4.176 11.76 4.656 11.184C5.088 10.656 5.664 10.224 6.336 9.888C6.96 9.6 7.68 9.408 8.4 9.408C9.12 9.408 9.792 9.504 10.416 9.744C11.04 9.984 11.568 10.32 12.096 10.704C12.576 11.088 12.96 11.568 13.296 12.096C13.584 12.624 13.824 13.152 13.968 13.776C13.824 13.776 13.68 13.824 13.536 13.824C12.864 14.016 12.24 14.304 11.664 14.688C11.088 15.072 10.608 15.552 10.176 16.128C9.792 16.656 9.456 17.28 9.216 17.952C9.024 18.624 8.928 19.344 8.976 20.064C9.024 20.784 9.12 21.504 9.408 22.176C9.648 22.848 9.984 23.472 10.464 24C10.944 24.528 11.472 24.96 12.096 25.344C12.72 25.68 13.344 25.968 14.064 26.112C14.784 26.256 15.552 26.304 16.272 26.208C16.992 26.112 17.712 25.872 18.336 25.584C18.96 25.248 19.536 24.816 20.016 24.336C20.496 23.856 20.88 23.328 21.168 22.704C21.456 22.08 21.696 21.456 21.744 20.784C21.84 20.112 21.84 19.44 21.696 18.768C21.552 18.096 21.312 17.472 20.976 16.896C20.64 16.32 20.16 15.792 19.632 15.36C19.104 14.928 18.528 14.592 17.904 14.352C17.616 14.304 17.328 14.208 17.088 14.16C17.04 13.824 17.04 13.488 16.992 13.152ZM17.328 23.328C16.848 23.76 16.224 24.096 15.552 24.24C14.88 24.384 14.208 24.432 13.536 24.336C12.912 24.24 12.24 24 11.664 23.664C11.088 23.328 10.608 22.896 10.176 22.416C9.792 21.888 9.456 21.36 9.264 20.784C9.072 20.208 8.976 19.632 8.976 19.056C8.976 18.48 9.072 17.904 9.264 17.376C9.456 16.8 9.744 16.32 10.128 15.84C10.464 15.36 10.944 14.976 11.424 14.688C11.904 14.4 12.432 14.208 13.008 14.112C13.008 14.112 13.68 14.064 14.4 14.112C15.168 14.16 16.464 14.4 16.464 14.4C16.32 14.976 16.272 15.456 16.368 15.936C16.416 16.416 16.56 16.896 16.8 17.28C17.04 17.712 17.328 18.096 17.664 18.432C18 18.768 18.384 19.056 18.768 19.296L19.104 19.44C19.104 19.488 19.104 19.488 19.104 19.488C19.104 19.488 19.104 19.488 19.104 19.536C19.104 20.112 19.008 20.688 18.768 21.264C18.576 21.84 18.288 22.32 17.952 22.752C17.808 22.992 17.568 23.136 17.328 23.328Z" fill="#F05138"/>
  </svg>
);

const TensorflowIcon = () => (
  <svg viewBox="0 0 24 24" fill="none" className="w-10 h-10">
    <path d="M12.0002 10.2308L17.6538 7.03849V12.9231L12.0002 16.1154V10.2308Z" fill="#FF6F00"/>
    <path d="M17.6538 7.03849L23.3075 10.2308V15.7308L19.6152 13.2692V12.2308L17.6538 11.0769V7.03849Z" fill="#FF6F00"/>
    <path d="M23.3075 15.7308L17.6538 19V15.0769L23.3075 11.8846V15.7308Z" fill="#FF6F00"/>
    <path d="M12.0002 16.1154L6.34637 19V7.03849L12.0002 3.96155V8.57694L8.30791 10.7308V15.2308L12.0002 13.0769V16.1154Z" fill="#FF6F00"/>
    <path d="M6.34615 7.03849L0.692383 10.2308V17.5385L4.38469 15.0769V11.8846L6.34615 10.7308V7.03849Z" fill="#FF6F00"/>
  </svg>
);

// Define tech stacks for each category
const techStacks: Record<TechCategory, Array<{ icon: React.ReactNode; name: string; }>> = {
  web: [
    { icon: <ReactIcon />, name: "React Js" },
    { icon: <AngularIcon />, name: "Angular Js" },
    { icon: <VueIcon />, name: "Vue Js" },
    // Other web icons...
  ],
  mobile: [
    { icon: <AndroidIcon />, name: "Android" },
    { icon: <SwiftIcon />, name: "Swift" },
    // Other mobile icons...
  ],
  nextgen: [
    { icon: <TensorflowIcon />, name: "TensorFlow" },
    // Other nextgen icons...
  ]
};

export default function TechStack() {
  const [activeCategory, setActiveCategory] = useState<TechCategory>("web");
  
  // Tabs for the tech categories
  const categories = [
    { id: "web" as TechCategory, label: "Web" },
    { id: "mobile" as TechCategory, label: "Mobile Apps" },
    { id: "nextgen" as TechCategory, label: "Next Gen Tech" }
  ];

  return (
    <section className="py-20 bg-black">
      <div className="container mx-auto px-4">
        <div className="text-center mb-12">
          <h2 className="text-4xl md:text-5xl font-bold mb-8">Our Fully Loaded Technology Stack</h2>
        </div>
        
        {/* Category Tabs */}
        <div className="flex justify-center mb-12">
          <div className="inline-flex bg-[#121212] rounded-md p-1">
            {categories.map((category) => (
              <button
                key={category.id}
                className={cn(
                  "px-8 py-3 text-sm font-medium relative",
                  activeCategory === category.id 
                    ? "text-[#0066FF]" 
                    : "text-white hover:text-gray-300"
                )}
                onClick={() => setActiveCategory(category.id)}
              >
                {category.label}
                {activeCategory === category.id && (
                  <motion.div 
                    className="absolute bottom-0 left-0 right-0 h-0.5 bg-[#0066FF]"
                    layoutId="underline"
                  />
                )}
              </button>
            ))}
          </div>
        </div>
        
        {/* Tech Icons Grid */}
        <motion.div 
          className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-8 md:gap-12"
          key={activeCategory}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.5 }}
        >
          {techStacks[activeCategory].map((tech, index) => (
            <motion.div
              key={index}
              className="flex flex-col items-center"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.3, delay: index * 0.1 }}
            >
              <div className="mb-3">{tech.icon}</div>
              <p className="text-sm text-gray-300">{tech.name}</p>
            </motion.div>
          ))}
        </motion.div>
      </div>
    </section>
  );
}